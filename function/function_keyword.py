# 如果你有一些具有许多参数的函数，而你又希望只对其中的一些进行指定，那么你可以通过
# 命名它们来给这些参数赋值——这就是关键字参数（Keyword Arguments）——我们使用命
# 名（关键字）而非位置（一直以来我们所使用的方式）来指定函数中的参数。
# 这样做有两大优点——其一，我们不再需要考虑参数的顺序，函数的使用将更加容易。其
# 二，我们可以只对那些我们希望赋予的参数以赋值，只要其它的参数都具有默认参数值。

def func(a, b=5, c=10):
    print('a is', a, 'and b is', b, 'and c is', c)

func(3, 7)
func(25, c=24)
func(c=50, a=100)


# 输出：
# $ python function_keyword.py
# a is 3 and b is 7 and c is 10
# a is 25 and b is 5 and c is 24
# a is 100 and b is 5 and c is 50
# 它是如何工作的
# 名为 func 的函数有一个没有默认参数值的参数，后跟两个各自带有默认参数值的参数。
# 在第一次调用函数时， func(3, 7) ，参数 a 获得了值 3 ，参数 b 获得了值 7 ，而 c
# 获得了默认参数值 10 。
# 在第二次调用函数时， func(25, c=24) ，由于其所处的位置，变量 a 首先获得了值 25。然
# 后，由于命名——即关键字参数——指定，变量 c 获得了值 24 。变量 b 获得默认参数值
# 5 。
# 在第三次调用函数时， func(c=50, a=100) ，我们全部使用关键字参数来指定值。在这里要注
# 意到，尽管 a 在 c 之前定义，但我们还是我们在变量 a 之前指定了变量 c 。